pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'mahdi0188/velflix-fpm'
        GIT_REPO_URL = 'https://github.com/Mahdi-Magroun/velflix-devops'
        DOCKER_CREDENTIALS_ID = 'mahdi0188-docker-hub'
        GITHUB_CREDENTIALS_ID = 'github'
        BRANCH = 'main'
        ENVIRONMENT = 'dev' // Change as needed for dev/test/prod
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set Environment') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        ENVIRONMENT = 'prod'
                    } else if (env.BRANCH_NAME == 'test') {
                        ENVIRONMENT = 'test'
                    } else {
                        ENVIRONMENT = 'dev'
                    }
                    echo "Deploying to ${ENVIRONMENT} environment"
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Run Composer install to fetch dependencies
                    sh 'composer install --no-interaction --prefer-dist'
                    sh 'chmod -R 775 storage bootstrap/cache'
                    sh 'chown -R www-data:www-data storage bootstrap/cache'
                }
            }
        }

        stage('Generate Docker Tag') {
            steps {
                script {
                    DOCKER_TAG = "${env.ENVIRONMENT}-${env.BUILD_NUMBER}-${env.GIT_COMMIT.take(7)}"
                    echo "Generated Docker Tag: ${DOCKER_TAG}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f devops/docker/prod-docker/Dockerfile.fpm ../../../"
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Update Kubernetes Image Tag') {
            steps {
                script {
                    def deploymentFile = readFile 'devops/kubernetes/manifests/velfix-fpm-deployment.yaml'
                    def updatedDeployment = deploymentFile.replaceAll(/image: ${DOCKER_IMAGE}:[a-zA-Z0-9._-]+/, "image: ${DOCKER_IMAGE}:${DOCKER_TAG}")
                    writeFile file: 'devops/kubernetes/manifests/velfix-fpm-deployment.yaml', text: updatedDeployment

                    withCredentials([usernamePassword(credentialsId: GITHUB_CREDENTIALS_ID, usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh '''
                        git config --global user.email "jenkins@velfix.com"
                        git config --global user.name "Mahdi-Magroun"
                        git add devops/kubernetes/manifests/velflix-fpm-deployment.yaml
                        git commit -m "Update image tag to ${DOCKER_TAG}"
                        git push https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/Mahdi-Magroun/velflix-devops.git HEAD:${BRANCH}
                        '''
                    }
                }
            }
        }
    }
}
